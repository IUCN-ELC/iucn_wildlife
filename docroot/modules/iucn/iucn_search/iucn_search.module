<?php

/**
 * Implements hook_theme().
 */
function iucn_search_theme($existing, $type, $theme, $path) {
  $return = [];
  $return ['iucn_search_results'] = [
    'variables' => [
      'items' => NULL,
    ],
    'path' => 'themes/iucn_frontend/templates/iucn_search',
  ];
  return $return;
}

/**
 * Implements hook_edw_search_solr_facet_info().
 */
function iucn_search_edw_search_solr_facet_info(\Drupal\iucn_search\edw\solr\SolrSearchServer $server) {
  $ret = array();
  // @ToDo: Translate facet titles
  $facets = [
    'field_region' => [
      'title' => t('Region'),
      'placeholder' => t('Add regions…'),
      'bundle' => 'regions',
    ],
    'field_court' => [
      'title' => t('Court'),
      'placeholder' => t('Add courts…'),
      'bundle' => 'court_levels',
    ],
    'field_offences' => [
      'title' => t('Offence'),
      'placeholder' => t('Add offences…'),
      'bundle' => 'offences',
      'exposeOperator' => TRUE,
    ],
    'field_species' => [
      'title' => t('Species'),
      'placeholder' => t('Add species…'),
      'bundle' => 'species',
      'exposeOperator' => TRUE,
    ],
    'field_wildlife_legislation' => [
      'title' => t('Wildlife legislation'),
      'placeholder' => t('Add wildlife legislations…'),
      'bundle' => 'wildlife_legislations',
    ],
//    'field_ecolex_subjects' => [
//      'title' => t('Subject'),
//      'placeholder' => t('Add subjects…'),
//      'bundle' => 'ecolex_subjects',
//    ],
//    'field_country' => [
//      'title' => t('Country'),
//      'placeholder' => t('Add countries…'),
//      'bundle' => 'country',
//    ],
//    'field_type_of_text' => [
//      'title' => t('Type of court'),
//      'placeholder' => t('Add types…'),
//      'bundle' => 'document_types',
//    ],
//    'field_territorial_subdivisions' => [
//      'title' => t('Sub-national/state level'),
//      'placeholder' => t('Add territory…'),
//      'bundle' => 'territorial_subdivisions',
//    ],
//      'field_subdivision' => [
//        'title' => t('Subdivision'),
//        'field' => 'field_subdivision',
//        'bundle' => 'subdivisions',
//      ],
//      'field_justices' => [
//        'title' => t('Justice'),
//        'field' => 'field_justices',
//        'bundle' => 'justices',
//      ],
//      'field_instance' => [
//        'title' => t('Instance'),
//        'field' => 'field_instance',
//        'bundle' => 'instances',
//      ],
//      'field_decision_status' => [
//        'title' => t('Decision status'),
//        'field' => 'field_decision_status',
//        'bundle' => 'decision_status',
//      ],
//      'field_court_jurisdiction' => [
//        'title' => t('Court jurisdiction'),
//        'field' => 'field_court_jurisdiction',
//        'bundle' => 'court_jurisdictions',
//      ],
  ];
  $mappings = $server->getSolrFieldsMappings();
  foreach ($facets as $id => $config) {
    $solr_field_name = $mappings[$id];
    $ret[$id] = new \Drupal\iucn_search\edw\solr\SolrFacet($id, $config['bundle'], $solr_field_name, $config);
  }
  return $ret;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function iucn_search_node_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->bundle() === 'court_decision' && $view_mode === 'search_result') {
    if (isset($build['#node']->solr_title)) {
      $build['title'][0]['#template'] = '{{ value|raw }}';
      $build['title'][0]['#context']['value'] = $build['#node']->solr_title;
    }

    if (isset($build['#node']->solr_abstract)) {
      $build['field_abstract'][0]['#text'] = $build['#node']->solr_abstract;
    }
  }
}
