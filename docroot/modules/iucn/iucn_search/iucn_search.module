<?php

use Drupal\Core\Database\Database;

/**
 * Implements hook_theme().
 */
function iucn_search_theme($existing, $type, $theme, $path) {
  return [
    'range_slider' => [
      'render element' => 'element',
      'variables' => [
        'from' => NULL,
        'max' => NULL,
        'min' => NULL,
        'title' => NULL,
        'to' => NULL,
      ]
    ]
  ];
}

/**
 * Implements hook_edw_search_solr_facet_info().
 */
function iucn_search_edw_search_solr_facet_info(\Drupal\iucn_search\edw\solr\SolrSearchServer $server) {
  $ret = array();

  $facets = [
    'field_country' => [
      'title' => t('Country'),
      'placeholder' => t('Add countries…'),
      'bundle' => 'country',
    ],
    'field_territorial_subdivisions' => [
      'title' => t('Sub-national jurisdiction'),
      'placeholder' => t('Add territories…'),
      'bundle' => 'territorial_subdivisions',
    ],
    'field_type_of_text' => [
      'title' => t('Judicial decision'),
      'placeholder' => t('Add types…'),
      'bundle' => 'document_types',
    ],
    'field_species' => [
      'title' => t('Species'),
      'placeholder' => t('Add species…'),
      'bundle' => 'species',
      'exposeOperator' => TRUE,
    ],
    'field_language_of_document' => [
      'title' => t('Language'),
      'placeholder' => t('Add languages…'),
      'bundle' => 'document_languages',
    ],
  ];

  $mappings = $server->getSolrFieldsMappings();

  foreach ($facets as $id => $config) {
    $solr_field_name = $mappings[$id];
    $ret[$id] = new \Drupal\iucn_search\edw\solr\SolrFacet($id, $config['bundle'], $solr_field_name, $config);
  }

  return $ret;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function iucn_search_node_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->bundle() === 'court_decision') {
    $build['title'][0]['#context']['value'] = $build['#node']->field_original_title[0]->value;

    $faolex_ref = array();

    if (isset($build['field_reference_to_faolex_title'][0])) {
      $faolex_ref['title'] = $build['field_reference_to_faolex_title'][0]['#context']['value'];

      hide($build['field_reference_to_faolex_title']);
    }

    if (isset($build['field_reference_to_faolex_date'][0])) {
      $faolex_ref['date'] = $build['field_reference_to_faolex_date'][0]['#markup'];

      hide($build['field_reference_to_faolex_date']);
    }

    if (isset($build['field_reference_to_faolex_countr'][0])) {
      $faolex_ref['country'] = $build['field_reference_to_faolex_countr'][0]['#plain_text'];

      hide($build['field_reference_to_faolex_countr']);
    }

    $config = \Drupal::config('iucn_search.settings');
    if (isset($build['field_reference_to_faolex'][0])) {
      $pattern = $config->get('reference_to_legislation_pattern');
      $uri = str_replace('$RECID', $build['field_reference_to_faolex'][0]['#context']['value'], $pattern);
      $url = \Drupal\Core\Url::fromUri($uri);
      $text = empty($faolex_ref) ? $build['field_reference_to_faolex'][0]['#context']['value'] : implode(', ', $faolex_ref);
      $link = \Drupal\Core\Link::fromTextAndUrl($text, $url)->toRenderable();
      $link['#attributes']['target'] = '_blank';
      $build['field_reference_to_faolex'][0]['#context']['value'] = $link;
    }

    if (!empty($build['field_reference_to_treaties']['#items'])) {
      $pattern = $config->get('reference_to_treaty_pattern');
      $items = [];
      foreach ($build['field_reference_to_treaties']['#items'] as $key => $item) {
        $uri = str_replace('$RECID', $item->getValue()['value'], $pattern);
        if (!empty($uri)) {
          if (!array_key_exists($key, $items)) {
            $items[$key] = [];
          }
          $items[$key]['id'] = $items[$key]['text'] = $item->getValue()['value'];
          $items[$key]['url'] = \Drupal\Core\Url::fromUri($uri);
        }
      }
      foreach ($build['field_reference_to_treaties_titl']['#items'] as $key => $item) {
        if (array_key_exists($key, $items)) {
          $items[$key]['text'] = $item->getValue()['value'];
        }
      }
      foreach ($items as $key => $item) {
        $link = \Drupal\Core\Link::fromTextAndUrl($item['text'], $item['url'])->toRenderable();
        $link['#attributes']['target'] = '_blank';
        $build['field_reference_to_treaties'][$key]['#context']['value'] = $link;
      }
      hide($build['field_reference_to_treaties_titl']);
    }

    if (isset($build['field_original_id'][0])) {
      $pattern = $config->get('reference_to_ecolex_pattern');
      $id = $build['field_original_id'][0]['#context']['value'];
      $uri = str_replace('$RECID', $id, $pattern);
      $url = \Drupal\Core\Url::fromUri($uri);
      $link = \Drupal\Core\Link::fromTextAndUrl($id, $url)->toRenderable();
      $link['#attributes']['target'] = '_blank';
      $build['field_original_id'][0]['#context']['value'] = $link;
    }

    if ($view_mode === 'search_result') {
      if (isset($build['#node']->solr_title)) {
        $build['title'][0]['#template'] = '{{ value|raw }}';
        $build['title'][0]['#context']['value'] = $build['#node']->solr_title;
      }

      if (isset($build['#node']->solr_abstract)) {
        $build['field_abstract'][0]['#text'] = $build['#node']->solr_abstract;
        $build['field_abstract'][0]['#format'] = 'basic_html';
      }
    }
  }
}

/**
 * Implements hook_cron().
 */
function iucn_search_cron() {
  if (function_exists('drush_log')) {
    drush_log('Increase SESSION wait_timeout');
  }
  Database::getConnection('default')->query("SET SESSION innodb_lock_wait_timeout = 4800");
  Database::getConnection('default')->query("SET SESSION wait_timeout = 4800");

  $migrations = [
    'elis_consumer_legislations',
    'elis_consumer_literatures',
    'elis_consumer_court_decisions',
  ];

  /** @var \Drupal\migrate\Plugin\MigrationPluginManager $service */
  $service = \Drupal::service('plugin.manager.migration');
  $migrate_last_imported_store = \Drupal::keyValue('migrate_last_imported');
  foreach ($migrations as $migrationName) {
    $last_run = \Drupal::state()->get('iucn_search.migration_last_run.' . $migrationName, NULL);
    if (empty($last_run) || (time() - $last_run) >= 3600 /* 1 hour */) {
      /** @var \Drupal\migrate\Plugin\Migration $migration */
      $migration = $service->createInstance($migrationName);
      if ($migration->getStatus() == \Drupal\migrate\Plugin\MigrationInterface::STATUS_IDLE) {
        $migration->setTrackLastImported(TRUE);
        $migration->getIdMap()->prepareUpdate();
        $executable = new \Drupal\migrate\MigrateExecutable($migration, new \Drupal\migrate\MigrateMessage());
        $executable->import();
        \Drupal::state()->set('iucn_search.migration_last_run.' . $migrationName, time());
        $migrate_last_imported_store->set($migration->id(), round(microtime(TRUE) * 1000));
      }
    }
  }

  drush_search_api_clear();
  drush_search_api_index();
}

function iucn_search_query_filter() {
  if (!empty($_GET['q'])) {
    return $_GET['q'];
  }

  return '';
}

/**
 * Implements hook_form_alter().
 */
function iucn_search_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'contact_message_feedback_form') {
    $form['actions']['preview']['#access'] = FALSE;
  }
}
