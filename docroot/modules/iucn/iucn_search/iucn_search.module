<?php

/**
 * Implements hook_theme().
 */
function iucn_search_theme($existing, $type, $theme, $path) {
  return [
    'range_slider' => [
      'render element' => 'element',
      'variables' => [
        'from' => NULL,
        'max' => NULL,
        'min' => NULL,
        'title' => NULL,
        'to' => NULL,
      ]
    ]
  ];
}

/**
 * Implements hook_edw_search_solr_facet_info().
 */
function iucn_search_edw_search_solr_facet_info(\Drupal\iucn_search\edw\solr\SolrSearchServer $server) {
  $ret = array();

  $facets = [
    'field_country' => [
      'title' => t('Country'),
      'placeholder' => t('Add countries…'),
      'bundle' => 'country',
    ],
    'field_territorial_subdivisions' => [
      'title' => t('Sub-national jurisdiction'),
      'placeholder' => t('Add territories…'),
      'bundle' => 'territorial_subdivisions',
    ],
    'field_type_of_text' => [
      'title' => t('Judicial decision'),
      'placeholder' => t('Add types…'),
      'bundle' => 'document_types',
    ],
//    'field_offences' => [
//      'title' => t('Offence'),
//      'placeholder' => t('Add offences…'),
//      'bundle' => 'offences',
//      'exposeOperator' => TRUE,
//    ],
    'field_species' => [
      'title' => t('Species'),
      'placeholder' => t('Add species…'),
      'bundle' => 'species',
      'exposeOperator' => TRUE,
    ],
    'field_language_of_document' => [
      'title' => t('Language'),
      'placeholder' => t('Add languages…'),
      'bundle' => 'document_languages',
    ],
//    'field_region' => [
//      'title' => t('Region'),
//      'placeholder' => t('Add regions…'),
//      'bundle' => 'regions',
//    ],
//    'field_court' => [
//      'title' => t('Court'),
//      'placeholder' => t('Add courts…'),
//      'bundle' => 'court_levels',
//    ],
//    'field_wildlife_legislation' => [
//      'title' => t('Wildlife legislation'),
//      'placeholder' => t('Add wildlife legislations…'),
//      'bundle' => 'wildlife_legislations',
//    ],
//    'field_ecolex_subjects' => [
//      'title' => t('Subject'),
//      'placeholder' => t('Add subjects…'),
//      'bundle' => 'ecolex_subjects',
//    ],
//    'field_subdivision' => [
//      'title' => t('Subdivision'),
//      'field' => 'field_subdivision',
//      'bundle' => 'subdivisions',
//    ],
//    'field_justices' => [
//      'title' => t('Justice'),
//      'field' => 'field_justices',
//      'bundle' => 'justices',
//    ],
//    'field_instance' => [
//      'title' => t('Instance'),
//      'field' => 'field_instance',
//      'bundle' => 'instances',
//    ],
//    'field_decision_status' => [
//      'title' => t('Decision status'),
//      'field' => 'field_decision_status',
//      'bundle' => 'decision_status',
//    ],
//    'field_court_jurisdiction' => [
//      'title' => t('Court jurisdiction'),
//      'field' => 'field_court_jurisdiction',
//      'bundle' => 'court_jurisdictions',
//    ],
  ];

  $mappings = $server->getSolrFieldsMappings();

  foreach ($facets as $id => $config) {
    $solr_field_name = $mappings[$id];
    $ret[$id] = new \Drupal\iucn_search\edw\solr\SolrFacet($id, $config['bundle'], $solr_field_name, $config);
  }

  return $ret;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function iucn_search_node_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->bundle() === 'court_decision') {
    $build['title'][0]['#context']['value'] = $build['#node']->field_original_title[0]->value;

    if (isset($build['field_reference_to_faolex'][0])) {
      $config = \Drupal::config('iucn_search.settings');
      $pattern = $config->get('reference_to_legislation_pattern');
      $uri = str_replace('$RECID', $build['field_reference_to_faolex'][0]['#context']['value'], $pattern);
      $url = \Drupal\Core\Url::fromUri($uri);
      $link = \Drupal\Core\Link::fromTextAndUrl($build['field_reference_to_faolex'][0]['#context']['value'], $url)->toRenderable();
      $link['#attributes']['target'] = '_blank';
      $build['field_reference_to_faolex'][0]['#context']['value'] = $link;
    }

    if ($view_mode === 'search_result') {
      if (isset($build['#node']->solr_title)) {
        $build['title'][0]['#template'] = '{{ value|raw }}';
        $build['title'][0]['#context']['value'] = $build['#node']->solr_title;
      }

      if (isset($build['#node']->solr_abstract)) {
        $build['field_abstract'][0]['#text'] = $build['#node']->solr_abstract;
        $build['field_abstract'][0]['#format'] = 'basic_html';
      }
    }
  }
}

/**
 * Implements hook_cron().
 */
function iucn_search_cron() {
  $last_run = \Drupal::state()->get('iucn_search.migration_last_run', NULL);
  if (empty($last_run) || (time() - $last_run) >= 3600 /* 1 hour */) {
    /** @var \Drupal\migrate\Entity\Migration $migration */
    $migration = \Drupal\migrate\Entity\Migration::load('elis_consumer_court_decisions');
    if ($migration->getStatus() == \Drupal\migrate\Entity\MigrationInterface::STATUS_IDLE) {
      $log = new \Drupal\migrate_tools\DrushLogMigrateMessage();
      $migrateExecutable = new \Drupal\migrate_tools\MigrateExecutable($migration, $log);
      $migrateExecutable->import();
      \Drupal::state()->set('iucn_search.migration_last_run', time());
    }
  }
}


function iucn_search_query_filter() {
  if (!empty($_GET['q'])) {
    return $_GET['q'];
  }
  else {
    if (!empty($_GET['last_query'])) {
      return $_GET['last_query'];
    }
  }
  return '';
}
